Властивість length об'єкта, який є екземпляром типу Array,
встановлює або повертає кількість елементів у цьому масиві.
Значення є цілим беззнаковим 32-бітним числом,
що завжди є більшим за найбільший індекс у масиві.

Приклад:

const clothing = ['shoes', 'shirts', 'socks', 'sweaters'];

console.log(clothing.length);
// expected output: 4



=======================================================================================================



Метод toUpperCase()
повертає той самий рядок, але з літерами переведеними до верхнього регістра 
(значення буде перетворене на рядок, якщо воно не є рядком).

Приклад: 
const sentence = 'The quick brown fox jumps over the lazy dog.';

console.log(sentence.toUpperCase());
// expected output: "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG."


=======================================================================================================


.splice() - для видалення значень в масиві


=======================================================================================================


Метод indexOf() повертає перший індекс, за яким даний елемент був знайдений в масиві,
а якщо він відсутній, то повертає -1.

Приклад:

var a = [2, 9, 9]; 
a.indexOf(2); // 0 
a.indexOf(7); // -1

if (a.indexOf(7) === -1) {
  // елемент не існує у масиві
}

Синтаксис
arr.indexOf(searchElement[, fromIndex])


Ще один приклад:

якщо у нас в масиві є число наприклад 32
const numArr = [2, 32, 1234, 54, 323];
value = numArr.indexOf(32)
цей метод показує під яким індексом
зберігається число 32 
// вийде індекс 1

=======================================================================================================


Метод toFixed() форматує число, використовуючи позначення з нерухомою крапкою

Приклад: 

var n = 12.345;

alert( n.toFixed(2) ); // "12.35"
alert( n.toFixed(0) ); // "12"
alert( n.toFixed(5) ); // "12.34500"


=======================================================================================================


Шаблонні літерали - це рядкові літерали, які дозволяють використання вбудованих виразів.
З ними ви можете використовувати багаторядковий запис та засоби інтерполяції рядків.

Приклад:

let a = 5;
let b = 10;
console.log(`П'ятнадцять - це ${a + b}, а
не ${2 * a + b}.`);
// "П'ятнадцять - це 15, а
// не 20."

=======================================================================================================


Метод Push

добавляє в масив числа 

Приклад:

const numArr = [2, 32, 1234, 54, 323];
let value;

value = numArr.push(число) 


=======================================================================================================

Ключове слово функції this

Воно також має певні відмінності між строгим та нестрогим режимами.

У більшості випадків, значення this визначається тим, як викликається функція
(прив'язка під час виконання).
Воно не може бути переприсвоєне під час виконання, і може змінюватись кожен раз,
коли викликається функція.
